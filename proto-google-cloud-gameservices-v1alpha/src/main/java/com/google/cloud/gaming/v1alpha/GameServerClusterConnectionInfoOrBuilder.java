/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gaming/v1alpha/game_server_clusters.proto

package com.google.cloud.gaming.v1alpha;

public interface GameServerClusterConnectionInfoOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gaming.v1alpha.GameServerClusterConnectionInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Namespace for Kubernetes API server endpoint.
   * </pre>
   *
   * <code>string namespace = 5;</code>
   */
  java.lang.String getNamespace();
  /**
   *
   *
   * <pre>
   * Namespace for Kubernetes API server endpoint.
   * </pre>
   *
   * <code>string namespace = 5;</code>
   */
  com.google.protobuf.ByteString getNamespaceBytes();

  /**
   *
   *
   * <pre>
   * This is the gkeName where the game server cluster is installed.
   * It must the format "projects/&#42;&#47;locations/&#42;&#47;clusters/&#42;". For example,
   * "projects/my-project/locations/us-central1/clusters/test".
   * </pre>
   *
   * <code>string gke_name = 6;</code>
   */
  java.lang.String getGkeName();
  /**
   *
   *
   * <pre>
   * This is the gkeName where the game server cluster is installed.
   * It must the format "projects/&#42;&#47;locations/&#42;&#47;clusters/&#42;". For example,
   * "projects/my-project/locations/us-central1/clusters/test".
   * </pre>
   *
   * <code>string gke_name = 6;</code>
   */
  com.google.protobuf.ByteString getGkeNameBytes();
}
