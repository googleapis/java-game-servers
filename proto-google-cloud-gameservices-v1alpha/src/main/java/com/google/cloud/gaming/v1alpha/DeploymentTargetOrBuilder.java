/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gaming/v1alpha/game_server_deployments.proto

package com.google.cloud.gaming.v1alpha;

public interface DeploymentTargetOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gaming.v1alpha.DeploymentTarget)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget clusters = 1;
   * </code>
   */
  java.util.List<com.google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget>
      getClustersList();
  /**
   * <code>repeated .google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget clusters = 1;
   * </code>
   */
  com.google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget getClusters(int index);
  /**
   * <code>repeated .google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget clusters = 1;
   * </code>
   */
  int getClustersCount();
  /**
   * <code>repeated .google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget clusters = 1;
   * </code>
   */
  java.util.List<
          ? extends com.google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTargetOrBuilder>
      getClustersOrBuilderList();
  /**
   * <code>repeated .google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTarget clusters = 1;
   * </code>
   */
  com.google.cloud.gaming.v1alpha.DeploymentTarget.ClusterRolloutTargetOrBuilder
      getClustersOrBuilder(int index);
}
